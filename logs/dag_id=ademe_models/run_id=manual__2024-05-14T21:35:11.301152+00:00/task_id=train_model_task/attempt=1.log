[2024-05-14T21:35:15.060+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: ademe_models.train_model_task manual__2024-05-14T21:35:11.301152+00:00 [queued]>
[2024-05-14T21:35:15.075+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: ademe_models.train_model_task manual__2024-05-14T21:35:11.301152+00:00 [queued]>
[2024-05-14T21:35:15.075+0000] {taskinstance.py:2193} INFO - Starting attempt 1 of 1
[2024-05-14T21:35:15.101+0000] {taskinstance.py:2217} INFO - Executing <Task(PythonOperator): train_model_task> on 2024-05-14 21:35:11.301152+00:00
[2024-05-14T21:35:15.117+0000] {standard_task_runner.py:60} INFO - Started process 721 to run task
[2024-05-14T21:35:15.139+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'ademe_models', 'train_model_task', 'manual__2024-05-14T21:35:11.301152+00:00', '--job-id', '44', '--raw', '--subdir', 'DAGS_FOLDER/predict_data.py', '--cfg-path', '/tmp/tmpv8768_b_']
[2024-05-14T21:35:15.140+0000] {standard_task_runner.py:88} INFO - Job 44: Subtask train_model_task
[2024-05-14T21:35:15.246+0000] {task_command.py:423} INFO - Running <TaskInstance: ademe_models.train_model_task manual__2024-05-14T21:35:11.301152+00:00 [running]> on host 0f2797502ce2
[2024-05-14T21:35:15.448+0000] {taskinstance.py:2513} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='ademe_models' AIRFLOW_CTX_TASK_ID='train_model_task' AIRFLOW_CTX_EXECUTION_DATE='2024-05-14T21:35:11.301152+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-05-14T21:35:11.301152+00:00'
[2024-05-14T21:35:15.580+0000] {logging_mixin.py:188} INFO -    etiquette_dpe  ...  type_energie_n_1
0              0  ...                 4
1              0  ...                 4
2              0  ...                 4
3              0  ...                 4
4              0  ...                 4

[5 rows x 5 columns]
[2024-05-14T21:35:15.697+0000] {logging_mixin.py:188} WARNING - 2024/05/14 21:35:15 WARNING mlflow.utils.git_utils: Failed to import Git (the Git executable is probably not on your PATH), so Git SHA is not available. Error: Failed to initialize: Bad git executable.
The git executable must be specified in one of the following ways:
    - be included in your $PATH
    - be set via $GIT_PYTHON_GIT_EXECUTABLE
    - explicitly set via git.refresh(<full-path-to-git-executable>)

All git commands will error until this is rectified.

This initial message can be silenced or aggravated in the future by setting the
$GIT_PYTHON_REFRESH environment variable. Use one of the following values:
    - quiet|q|silence|s|silent|none|n|0: for no message or exception
    - warn|w|warning|log|l|1: for a warning message (logging level CRITICAL, displayed by default)
    - error|e|exception|raise|r|2: for a raised exception

Example:
    export GIT_PYTHON_REFRESH=quiet
[2024-05-14T21:35:15.740+0000] {logging_mixin.py:188} INFO - training on 200 samples
[2024-05-14T21:35:15.776+0000] {logging_mixin.py:188} WARNING - 2024/05/14 21:35:15 WARNING mlflow.utils.autologging_utils: MLflow autologging encountered a warning: "/home/***/.local/lib/python3.8/site-packages/mlflow/types/utils.py:394: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details."
[2024-05-14T21:35:17.471+0000] {__init__.py:531} WARNING - Matplotlib created a temporary cache directory at /tmp/matplotlib-z1qsp2m1 because the default path (/home/airflow/.cache/matplotlib) is not a writable directory; it is highly recommended to set the MPLCONFIGDIR environment variable to a writable directory, in particular to speed up the import of Matplotlib and to better support multiprocessing.
[2024-05-14T21:35:18.128+0000] {font_manager.py:1547} INFO - generated new fontManager
[2024-05-14T21:35:19.305+0000] {logging_mixin.py:188} WARNING - 2024/05/14 21:35:19 WARNING mlflow.utils.autologging_utils: MLflow autologging encountered a warning: "/home/***/.local/lib/python3.8/site-packages/mlflow/types/utils.py:394: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details."
[2024-05-14T21:35:27.353+0000] {logging_mixin.py:188} WARNING - 2024/05/14 21:35:27 WARNING mlflow.utils.autologging_utils: MLflow autologging encountered a warning: "/home/***/.local/lib/python3.8/site-packages/_distutils_hack/__init__.py:33: UserWarning: Setuptools is replacing distutils."
[2024-05-14T21:35:31.165+0000] {logging_mixin.py:188} WARNING - 2024/05/14 21:35:31 INFO mlflow.sklearn.utils: Logging the 5 best runs, no runs will be omitted.
[2024-05-14T21:35:31.280+0000] {logging_mixin.py:188} WARNING - 2024/05/14 21:35:31 WARNING mlflow.utils.autologging_utils: MLflow autologging encountered a warning: "/home/***/.local/lib/python3.8/site-packages/mlflow/types/utils.py:394: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details."
[2024-05-14T21:35:31.305+0000] {logging_mixin.py:188} WARNING - 2024/05/14 21:35:31 WARNING mlflow.utils.autologging_utils: MLflow autologging encountered a warning: "/home/***/.local/lib/python3.8/site-packages/mlflow/types/utils.py:394: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details."
[2024-05-14T21:35:31.314+0000] {logging_mixin.py:188} INFO - ---------------------------------------- Best model
[2024-05-14T21:35:31.314+0000] {logging_mixin.py:188} INFO - 	parameters: {'max_depth': 4, 'min_samples_leaf': 4, 'n_estimators': 10}
[2024-05-14T21:35:31.314+0000] {logging_mixin.py:188} INFO - 	cross-validation score: 0.5997533148319457
[2024-05-14T21:35:31.315+0000] {logging_mixin.py:188} INFO - 	model: RandomForestClassifier(max_depth=4, min_samples_leaf=4, n_estimators=10)
[2024-05-14T21:35:31.315+0000] {logging_mixin.py:188} INFO - ---------------------------------------- performance
[2024-05-14T21:35:31.315+0000] {logging_mixin.py:188} INFO - 	precision_score: 0.53
[2024-05-14T21:35:31.315+0000] {logging_mixin.py:188} INFO - 	recall_score: 0.53
[2024-05-14T21:35:31.321+0000] {logging_mixin.py:188} INFO - 	median(probabilities): 0.54
[2024-05-14T21:35:31.321+0000] {logging_mixin.py:188} INFO - 	std(probabilities): 0.1
[2024-05-14T21:35:31.359+0000] {logging_mixin.py:188} INFO - model does not exist
[2024-05-14T21:35:31.360+0000] {logging_mixin.py:188} INFO - registering new model dpe_challenger
[2024-05-14T21:35:31.376+0000] {logging_mixin.py:188} WARNING - 2024/05/14 21:35:31 INFO mlflow.store.model_registry.abstract_store: Waiting up to 300 seconds for model version to finish creation. Model name: dpe_challenger, version 1
[2024-05-14T21:35:31.377+0000] {warnings.py:109} WARNING - /opt/***/dags/predict_data.py:219: FutureWarning: ``mlflow.tracking.client.MlflowClient.transition_model_version_stage`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.12.2/model-registry.html#migrating-from-stages
  client.transition_model_version_stage(

[2024-05-14T21:35:31.395+0000] {python.py:202} INFO - Done. Returned value was: None
[2024-05-14T21:35:31.409+0000] {taskinstance.py:1149} INFO - Marking task as SUCCESS. dag_id=ademe_models, task_id=train_model_task, execution_date=20240514T213511, start_date=20240514T213515, end_date=20240514T213531
[2024-05-14T21:35:31.474+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2024-05-14T21:35:31.505+0000] {taskinstance.py:3312} INFO - 1 downstream tasks scheduled from follow-on schedule check
